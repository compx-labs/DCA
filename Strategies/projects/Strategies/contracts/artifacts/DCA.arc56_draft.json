{
  "name": "DCA",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "args": [
        {
          "name": "orchestratorAddress",
          "type": "address"
        },
        {
          "name": "swapToken",
          "type": "uint64"
        },
        {
          "name": "swapManagerAccount",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    },
    {
      "name": "deleteApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "DeleteApplication"
        ]
      }
    },
    {
      "name": "optInToAsset",
      "args": [
        {
          "name": "asset",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "addMBR",
      "args": [
        {
          "name": "payTxn",
          "type": "pay"
        },
        {
          "name": "quantity",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setSwapParams",
      "args": [
        {
          "name": "swapAmount",
          "type": "uint64"
        },
        {
          "name": "SwapToTokenId",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "updateSwapManagerAccount",
      "args": [
        {
          "name": "swapManagerAccount",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "initiateSwap",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "receiveSwapAndSendOn",
      "args": [
        {
          "name": "axferTxn",
          "type": "axfer"
        },
        {
          "name": "quantity",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "sendSwappedTokens",
      "args": [
        {
          "name": "sendToAddress",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 3,
        "ints": 5
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "mbr": {
          "key": "bWJy",
          "keyType": "bytes",
          "valueType": "uint64"
        },
        "swappedTokenBalance": {
          "key": "c3dhcHBlZFRva2VuQmFsYW5jZQ==",
          "keyType": "bytes",
          "valueType": "uint64"
        },
        "lastUpdated": {
          "key": "bGFzdFVwZGF0ZWQ=",
          "keyType": "bytes",
          "valueType": "uint64"
        },
        "orchestratorAddress": {
          "key": "b3JjaGVzdHJhdG9yQWRkcmVzcw==",
          "keyType": "bytes",
          "valueType": "address"
        },
        "swapManagerAccount": {
          "key": "c3dhcE1hbmFnZXJBY2NvdW50",
          "keyType": "bytes",
          "valueType": "address"
        },
        "userAddress": {
          "key": "dXNlckFkZHJlc3M=",
          "keyType": "bytes",
          "valueType": "address"
        },
        "SwapToTokenId": {
          "key": "U3dhcFRvVG9rZW5JZA==",
          "keyType": "bytes",
          "valueType": "uint64"
        },
        "swapAmount": {
          "key": "c3dhcEFtb3VudA==",
          "keyType": "bytes",
          "valueType": "uint64"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 3,
      "pc": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124
      ]
    },
    {
      "teal": 13,
      "source": 3,
      "pc": [
        125,
        126
      ]
    },
    {
      "teal": 14,
      "source": 3,
      "pc": [
        127
      ]
    },
    {
      "teal": 15,
      "source": 3,
      "pc": [
        128,
        129
      ]
    },
    {
      "teal": 16,
      "source": 3,
      "pc": [
        130
      ]
    },
    {
      "teal": 17,
      "source": 3,
      "pc": [
        131,
        132
      ]
    },
    {
      "teal": 18,
      "source": 3,
      "pc": [
        133
      ]
    },
    {
      "teal": 19,
      "source": 3,
      "pc": [
        134,
        135,
        136,
        137,
        138,
        139,
        140,
        141,
        142,
        143,
        144,
        145,
        146,
        147,
        148,
        149,
        150,
        151,
        152,
        153,
        154,
        155,
        156,
        157,
        158,
        159
      ]
    },
    {
      "teal": 23,
      "source": 3,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "pc": [
        160
      ]
    },
    {
      "teal": 28,
      "source": 22,
      "pc": [
        161,
        162,
        163
      ]
    },
    {
      "teal": 29,
      "source": 22,
      "pc": [
        164
      ]
    },
    {
      "teal": 30,
      "source": 22,
      "pc": [
        165
      ]
    },
    {
      "teal": 31,
      "source": 22,
      "pc": [
        166
      ]
    },
    {
      "teal": 32,
      "source": 22,
      "pc": [
        167
      ]
    },
    {
      "teal": 35,
      "source": 22,
      "errorMessage": "argument 0 (swapManagerAccount) for createApplication must be a address",
      "pc": [
        168
      ]
    },
    {
      "teal": 38,
      "source": 22,
      "pc": [
        169,
        170,
        171
      ]
    },
    {
      "teal": 39,
      "source": 22,
      "pc": [
        172
      ]
    },
    {
      "teal": 42,
      "source": 22,
      "pc": [
        173,
        174,
        175
      ]
    },
    {
      "teal": 43,
      "source": 22,
      "pc": [
        176
      ]
    },
    {
      "teal": 44,
      "source": 22,
      "pc": [
        177
      ]
    },
    {
      "teal": 45,
      "source": 22,
      "pc": [
        178
      ]
    },
    {
      "teal": 46,
      "source": 22,
      "pc": [
        179
      ]
    },
    {
      "teal": 49,
      "source": 22,
      "errorMessage": "argument 2 (orchestratorAddress) for createApplication must be a address",
      "pc": [
        180
      ]
    },
    {
      "teal": 52,
      "source": 22,
      "pc": [
        181,
        182,
        183
      ]
    },
    {
      "teal": 53,
      "source": 22,
      "pc": [
        184
      ]
    },
    {
      "teal": 54,
      "source": 22,
      "pc": [
        185
      ]
    },
    {
      "teal": 58,
      "source": 22,
      "pc": [
        186,
        187,
        188
      ]
    },
    {
      "teal": 62,
      "source": 23,
      "pc": [
        189
      ]
    },
    {
      "teal": 63,
      "source": 23,
      "pc": [
        190
      ]
    },
    {
      "teal": 64,
      "source": 23,
      "pc": [
        191
      ]
    },
    {
      "teal": 68,
      "source": 24,
      "pc": [
        192,
        193
      ]
    },
    {
      "teal": 69,
      "source": 24,
      "pc": [
        194
      ]
    },
    {
      "teal": 70,
      "source": 24,
      "pc": [
        195
      ]
    },
    {
      "teal": 74,
      "source": 25,
      "pc": [
        196
      ]
    },
    {
      "teal": 75,
      "source": 25,
      "pc": [
        197,
        198
      ]
    },
    {
      "teal": 76,
      "source": 25,
      "pc": [
        199
      ]
    },
    {
      "teal": 80,
      "source": 26,
      "pc": [
        200,
        201
      ]
    },
    {
      "teal": 81,
      "source": 26,
      "pc": [
        202,
        203
      ]
    },
    {
      "teal": 82,
      "source": 26,
      "pc": [
        204
      ]
    },
    {
      "teal": 86,
      "source": 27,
      "pc": [
        205
      ]
    },
    {
      "teal": 87,
      "source": 27,
      "pc": [
        206,
        207
      ]
    },
    {
      "teal": 88,
      "source": 27,
      "pc": [
        208
      ]
    },
    {
      "teal": 92,
      "source": 28,
      "pc": [
        209
      ]
    },
    {
      "teal": 93,
      "source": 28,
      "pc": [
        210,
        211
      ]
    },
    {
      "teal": 94,
      "source": 28,
      "pc": [
        212
      ]
    },
    {
      "teal": 98,
      "source": 29,
      "pc": [
        213,
        214
      ]
    },
    {
      "teal": 99,
      "source": 29,
      "pc": [
        215
      ]
    },
    {
      "teal": 100,
      "source": 29,
      "pc": [
        216
      ]
    },
    {
      "teal": 104,
      "source": 30,
      "pc": [
        217,
        218
      ]
    },
    {
      "teal": 105,
      "source": 30,
      "pc": [
        219,
        220
      ]
    },
    {
      "teal": 106,
      "source": 30,
      "pc": [
        221
      ]
    },
    {
      "teal": 107,
      "source": 22,
      "pc": [
        222
      ]
    },
    {
      "teal": 112,
      "source": 34,
      "pc": [
        223,
        224,
        225
      ]
    },
    {
      "teal": 113,
      "source": 34,
      "pc": [
        226
      ]
    },
    {
      "teal": 114,
      "source": 34,
      "pc": [
        227
      ]
    },
    {
      "teal": 118,
      "source": 34,
      "pc": [
        228,
        229,
        230
      ]
    },
    {
      "teal": 122,
      "source": 35,
      "pc": [
        231,
        232
      ]
    },
    {
      "teal": 123,
      "source": 35,
      "pc": [
        233
      ]
    },
    {
      "teal": 124,
      "source": 35,
      "pc": [
        234
      ]
    },
    {
      "teal": 125,
      "source": 35,
      "pc": [
        235
      ]
    },
    {
      "teal": 128,
      "source": 35,
      "errorMessage": "Only user can delete application",
      "pc": [
        236
      ]
    },
    {
      "teal": 129,
      "source": 34,
      "pc": [
        237
      ]
    },
    {
      "teal": 134,
      "source": 38,
      "pc": [
        238,
        239,
        240
      ]
    },
    {
      "teal": 135,
      "source": 38,
      "pc": [
        241
      ]
    },
    {
      "teal": 138,
      "source": 38,
      "pc": [
        242,
        243,
        244
      ]
    },
    {
      "teal": 139,
      "source": 38,
      "pc": [
        245
      ]
    },
    {
      "teal": 140,
      "source": 38,
      "pc": [
        246
      ]
    },
    {
      "teal": 144,
      "source": 38,
      "pc": [
        247,
        248,
        249
      ]
    },
    {
      "teal": 148,
      "source": 39,
      "pc": [
        250,
        251
      ]
    },
    {
      "teal": 149,
      "source": 39,
      "pc": [
        252
      ]
    },
    {
      "teal": 150,
      "source": 39,
      "pc": [
        253
      ]
    },
    {
      "teal": 151,
      "source": 39,
      "pc": [
        254
      ]
    },
    {
      "teal": 154,
      "source": 39,
      "errorMessage": "Only user can opt contract into asset",
      "pc": [
        255
      ]
    },
    {
      "teal": 163,
      "source": 41,
      "pc": [
        256
      ]
    },
    {
      "teal": 164,
      "source": 41,
      "pc": [
        257
      ]
    },
    {
      "teal": 165,
      "source": 41,
      "pc": [
        258,
        259
      ]
    },
    {
      "teal": 169,
      "source": 42,
      "pc": [
        260,
        261
      ]
    },
    {
      "teal": 170,
      "source": 42,
      "pc": [
        262,
        263
      ]
    },
    {
      "teal": 174,
      "source": 43,
      "pc": [
        264
      ]
    },
    {
      "teal": 175,
      "source": 43,
      "pc": [
        265,
        266
      ]
    },
    {
      "teal": 179,
      "source": 44,
      "pc": [
        267,
        268
      ]
    },
    {
      "teal": 180,
      "source": 44,
      "pc": [
        269,
        270
      ]
    },
    {
      "teal": 184,
      "source": 45,
      "pc": [
        271,
        272
      ]
    },
    {
      "teal": 185,
      "source": 45,
      "pc": [
        273,
        274
      ]
    },
    {
      "teal": 188,
      "source": 41,
      "pc": [
        275
      ]
    },
    {
      "teal": 189,
      "source": 41,
      "pc": [
        276,
        277
      ]
    },
    {
      "teal": 192,
      "source": 41,
      "pc": [
        278
      ]
    },
    {
      "teal": 193,
      "source": 38,
      "pc": [
        279
      ]
    },
    {
      "teal": 198,
      "source": 49,
      "pc": [
        280,
        281,
        282
      ]
    },
    {
      "teal": 199,
      "source": 49,
      "pc": [
        283
      ]
    },
    {
      "teal": 202,
      "source": 49,
      "pc": [
        284,
        285
      ]
    },
    {
      "teal": 203,
      "source": 49,
      "pc": [
        286
      ]
    },
    {
      "teal": 204,
      "source": 49,
      "pc": [
        287
      ]
    },
    {
      "teal": 205,
      "source": 49,
      "pc": [
        288
      ]
    },
    {
      "teal": 206,
      "source": 49,
      "pc": [
        289,
        290
      ]
    },
    {
      "teal": 207,
      "source": 49,
      "pc": [
        291
      ]
    },
    {
      "teal": 208,
      "source": 49,
      "pc": [
        292
      ]
    },
    {
      "teal": 211,
      "source": 49,
      "errorMessage": "argument 1 (payTxn) for addMBR must be a pay transaction",
      "pc": [
        293
      ]
    },
    {
      "teal": 214,
      "source": 49,
      "pc": [
        294,
        295,
        296
      ]
    },
    {
      "teal": 215,
      "source": 49,
      "pc": [
        297
      ]
    },
    {
      "teal": 216,
      "source": 49,
      "pc": [
        298
      ]
    },
    {
      "teal": 220,
      "source": 49,
      "pc": [
        299,
        300,
        301
      ]
    },
    {
      "teal": 224,
      "source": 50,
      "pc": [
        302,
        303
      ]
    },
    {
      "teal": 225,
      "source": 50,
      "pc": [
        304
      ]
    },
    {
      "teal": 226,
      "source": 50,
      "pc": [
        305
      ]
    },
    {
      "teal": 227,
      "source": 50,
      "pc": [
        306
      ]
    },
    {
      "teal": 230,
      "source": 50,
      "errorMessage": "Only user can add MBR",
      "pc": [
        307
      ]
    },
    {
      "teal": 239,
      "source": 52,
      "pc": [
        308,
        309
      ]
    },
    {
      "teal": 240,
      "source": 53,
      "pc": [
        310,
        311
      ]
    },
    {
      "teal": 241,
      "source": 53,
      "pc": [
        312
      ]
    },
    {
      "teal": 242,
      "source": 53,
      "pc": [
        313
      ]
    },
    {
      "teal": 243,
      "source": 53,
      "pc": [
        314
      ]
    },
    {
      "teal": 246,
      "source": 53,
      "errorMessage": "transaction verification failed: {\"txn\":\"payTxn\",\"field\":\"sender\",\"expected\":\"this.userAddress.value\"}",
      "pc": [
        315
      ]
    },
    {
      "teal": 249,
      "source": 52,
      "pc": [
        316,
        317
      ]
    },
    {
      "teal": 250,
      "source": 54,
      "pc": [
        318,
        319
      ]
    },
    {
      "teal": 251,
      "source": 54,
      "pc": [
        320,
        321
      ]
    },
    {
      "teal": 252,
      "source": 54,
      "pc": [
        322
      ]
    },
    {
      "teal": 255,
      "source": 54,
      "errorMessage": "transaction verification failed: {\"txn\":\"payTxn\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}",
      "pc": [
        323
      ]
    },
    {
      "teal": 258,
      "source": 52,
      "pc": [
        324,
        325
      ]
    },
    {
      "teal": 259,
      "source": 55,
      "pc": [
        326,
        327
      ]
    },
    {
      "teal": 260,
      "source": 55,
      "pc": [
        328,
        329
      ]
    },
    {
      "teal": 261,
      "source": 55,
      "pc": [
        330
      ]
    },
    {
      "teal": 264,
      "source": 55,
      "errorMessage": "transaction verification failed: {\"txn\":\"payTxn\",\"field\":\"amount\",\"expected\":\"quantity\"}",
      "pc": [
        331
      ]
    },
    {
      "teal": 268,
      "source": 57,
      "pc": [
        332,
        333
      ]
    },
    {
      "teal": 269,
      "source": 57,
      "pc": [
        334
      ]
    },
    {
      "teal": 270,
      "source": 57,
      "pc": [
        335,
        336
      ]
    },
    {
      "teal": 271,
      "source": 57,
      "pc": [
        337,
        338
      ]
    },
    {
      "teal": 272,
      "source": 57,
      "pc": [
        339
      ]
    },
    {
      "teal": 273,
      "source": 57,
      "pc": [
        340,
        341
      ]
    },
    {
      "teal": 274,
      "source": 57,
      "pc": [
        342
      ]
    },
    {
      "teal": 275,
      "source": 57,
      "pc": [
        343
      ]
    },
    {
      "teal": 279,
      "source": 58,
      "pc": [
        344
      ]
    },
    {
      "teal": 280,
      "source": 58,
      "pc": [
        345,
        346
      ]
    },
    {
      "teal": 281,
      "source": 58,
      "pc": [
        347
      ]
    },
    {
      "teal": 282,
      "source": 49,
      "pc": [
        348
      ]
    },
    {
      "teal": 287,
      "source": 61,
      "pc": [
        349,
        350,
        351
      ]
    },
    {
      "teal": 288,
      "source": 61,
      "pc": [
        352
      ]
    },
    {
      "teal": 291,
      "source": 61,
      "pc": [
        353,
        354,
        355
      ]
    },
    {
      "teal": 292,
      "source": 61,
      "pc": [
        356
      ]
    },
    {
      "teal": 295,
      "source": 61,
      "pc": [
        357,
        358,
        359
      ]
    },
    {
      "teal": 296,
      "source": 61,
      "pc": [
        360
      ]
    },
    {
      "teal": 297,
      "source": 61,
      "pc": [
        361
      ]
    },
    {
      "teal": 301,
      "source": 61,
      "pc": [
        362,
        363,
        364
      ]
    },
    {
      "teal": 305,
      "source": 62,
      "pc": [
        365,
        366
      ]
    },
    {
      "teal": 306,
      "source": 62,
      "pc": [
        367
      ]
    },
    {
      "teal": 307,
      "source": 62,
      "pc": [
        368
      ]
    },
    {
      "teal": 308,
      "source": 62,
      "pc": [
        369
      ]
    },
    {
      "teal": 311,
      "source": 62,
      "errorMessage": "Only user can set swap params",
      "pc": [
        370
      ]
    },
    {
      "teal": 315,
      "source": 64,
      "pc": [
        371,
        372
      ]
    },
    {
      "teal": 316,
      "source": 64,
      "pc": [
        373,
        374
      ]
    },
    {
      "teal": 317,
      "source": 64,
      "pc": [
        375
      ]
    },
    {
      "teal": 321,
      "source": 65,
      "pc": [
        376
      ]
    },
    {
      "teal": 322,
      "source": 65,
      "pc": [
        377,
        378
      ]
    },
    {
      "teal": 323,
      "source": 65,
      "pc": [
        379
      ]
    },
    {
      "teal": 327,
      "source": 67,
      "pc": [
        380
      ]
    },
    {
      "teal": 328,
      "source": 67,
      "pc": [
        381,
        382
      ]
    },
    {
      "teal": 329,
      "source": 67,
      "pc": [
        383
      ]
    },
    {
      "teal": 330,
      "source": 61,
      "pc": [
        384
      ]
    },
    {
      "teal": 335,
      "source": 70,
      "pc": [
        385,
        386,
        387
      ]
    },
    {
      "teal": 336,
      "source": 70,
      "pc": [
        388
      ]
    },
    {
      "teal": 337,
      "source": 70,
      "pc": [
        389
      ]
    },
    {
      "teal": 338,
      "source": 70,
      "pc": [
        390
      ]
    },
    {
      "teal": 339,
      "source": 70,
      "pc": [
        391
      ]
    },
    {
      "teal": 342,
      "source": 70,
      "errorMessage": "argument 0 (swapManagerAccount) for updateSwapManagerAccount must be a address",
      "pc": [
        392
      ]
    },
    {
      "teal": 345,
      "source": 70,
      "pc": [
        393,
        394,
        395
      ]
    },
    {
      "teal": 346,
      "source": 70,
      "pc": [
        396
      ]
    },
    {
      "teal": 347,
      "source": 70,
      "pc": [
        397
      ]
    },
    {
      "teal": 351,
      "source": 70,
      "pc": [
        398,
        399,
        400
      ]
    },
    {
      "teal": 355,
      "source": 71,
      "pc": [
        401,
        402
      ]
    },
    {
      "teal": 356,
      "source": 71,
      "pc": [
        403,
        404
      ]
    },
    {
      "teal": 357,
      "source": 71,
      "pc": [
        405
      ]
    },
    {
      "teal": 358,
      "source": 71,
      "pc": [
        406
      ]
    },
    {
      "teal": 361,
      "source": 71,
      "errorMessage": "Only orchestrator can update swap manager account",
      "pc": [
        407
      ]
    },
    {
      "teal": 365,
      "source": 73,
      "pc": [
        408,
        409
      ]
    },
    {
      "teal": 366,
      "source": 73,
      "pc": [
        410,
        411
      ]
    },
    {
      "teal": 367,
      "source": 73,
      "pc": [
        412
      ]
    },
    {
      "teal": 371,
      "source": 75,
      "pc": [
        413
      ]
    },
    {
      "teal": 372,
      "source": 75,
      "pc": [
        414,
        415
      ]
    },
    {
      "teal": 373,
      "source": 75,
      "pc": [
        416
      ]
    },
    {
      "teal": 374,
      "source": 70,
      "pc": [
        417
      ]
    },
    {
      "teal": 379,
      "source": 78,
      "pc": [
        418,
        419,
        420
      ]
    },
    {
      "teal": 380,
      "source": 78,
      "pc": [
        421
      ]
    },
    {
      "teal": 381,
      "source": 78,
      "pc": [
        422
      ]
    },
    {
      "teal": 385,
      "source": 78,
      "pc": [
        423,
        424,
        425
      ]
    },
    {
      "teal": 389,
      "source": 79,
      "pc": [
        426,
        427
      ]
    },
    {
      "teal": 390,
      "source": 79,
      "pc": [
        428
      ]
    },
    {
      "teal": 391,
      "source": 79,
      "pc": [
        429
      ]
    },
    {
      "teal": 392,
      "source": 79,
      "pc": [
        430
      ]
    },
    {
      "teal": 395,
      "source": 79,
      "errorMessage": "Only user can initiate swap",
      "pc": [
        431
      ]
    },
    {
      "teal": 399,
      "source": 80,
      "pc": [
        432,
        433
      ]
    },
    {
      "teal": 400,
      "source": 80,
      "pc": [
        434,
        435
      ]
    },
    {
      "teal": 401,
      "source": 80,
      "pc": [
        436
      ]
    },
    {
      "teal": 402,
      "source": 80,
      "pc": [
        437
      ]
    },
    {
      "teal": 403,
      "source": 80,
      "pc": [
        438
      ]
    },
    {
      "teal": 406,
      "source": 80,
      "errorMessage": "Insufficient balance",
      "pc": [
        439
      ]
    },
    {
      "teal": 410,
      "source": 81,
      "pc": [
        440,
        441
      ]
    },
    {
      "teal": 411,
      "source": 81,
      "pc": [
        442
      ]
    },
    {
      "teal": 412,
      "source": 81,
      "pc": [
        443
      ]
    },
    {
      "teal": 413,
      "source": 81,
      "pc": [
        444
      ]
    },
    {
      "teal": 416,
      "source": 81,
      "errorMessage": "Swap amount not set",
      "pc": [
        445
      ]
    },
    {
      "teal": 420,
      "source": 82,
      "pc": [
        446
      ]
    },
    {
      "teal": 421,
      "source": 82,
      "pc": [
        447
      ]
    },
    {
      "teal": 422,
      "source": 82,
      "pc": [
        448
      ]
    },
    {
      "teal": 423,
      "source": 82,
      "pc": [
        449
      ]
    },
    {
      "teal": 426,
      "source": 82,
      "errorMessage": "Swap token not set",
      "pc": [
        450
      ]
    },
    {
      "teal": 435,
      "source": 84,
      "pc": [
        451
      ]
    },
    {
      "teal": 436,
      "source": 84,
      "pc": [
        452
      ]
    },
    {
      "teal": 437,
      "source": 84,
      "pc": [
        453,
        454
      ]
    },
    {
      "teal": 441,
      "source": 85,
      "pc": [
        455,
        456
      ]
    },
    {
      "teal": 442,
      "source": 85,
      "pc": [
        457
      ]
    },
    {
      "teal": 443,
      "source": 85,
      "pc": [
        458,
        459
      ]
    },
    {
      "teal": 447,
      "source": 86,
      "pc": [
        460,
        461
      ]
    },
    {
      "teal": 448,
      "source": 86,
      "pc": [
        462,
        463
      ]
    },
    {
      "teal": 452,
      "source": 87,
      "pc": [
        464,
        465
      ]
    },
    {
      "teal": 453,
      "source": 87,
      "pc": [
        466
      ]
    },
    {
      "teal": 454,
      "source": 87,
      "pc": [
        467,
        468
      ]
    },
    {
      "teal": 458,
      "source": 88,
      "pc": [
        469,
        470,
        471,
        472,
        473,
        474,
        475,
        476,
        477,
        478,
        479,
        480,
        481,
        482,
        483,
        484,
        485,
        486,
        487,
        488,
        489,
        490,
        491,
        492,
        493,
        494,
        495,
        496,
        497,
        498
      ]
    },
    {
      "teal": 459,
      "source": 88,
      "pc": [
        499
      ]
    },
    {
      "teal": 460,
      "source": 88,
      "pc": [
        500
      ]
    },
    {
      "teal": 461,
      "source": 88,
      "pc": [
        501
      ]
    },
    {
      "teal": 462,
      "source": 88,
      "pc": [
        502,
        503
      ]
    },
    {
      "teal": 463,
      "source": 88,
      "pc": [
        504
      ]
    },
    {
      "teal": 464,
      "source": 88,
      "pc": [
        505,
        506
      ]
    },
    {
      "teal": 465,
      "source": 88,
      "pc": [
        507
      ]
    },
    {
      "teal": 466,
      "source": 88,
      "pc": [
        508
      ]
    },
    {
      "teal": 467,
      "source": 88,
      "pc": [
        509,
        510
      ]
    },
    {
      "teal": 470,
      "source": 84,
      "pc": [
        511
      ]
    },
    {
      "teal": 471,
      "source": 84,
      "pc": [
        512,
        513
      ]
    },
    {
      "teal": 474,
      "source": 84,
      "pc": [
        514
      ]
    },
    {
      "teal": 478,
      "source": 91,
      "pc": [
        515
      ]
    },
    {
      "teal": 479,
      "source": 91,
      "pc": [
        516,
        517
      ]
    },
    {
      "teal": 480,
      "source": 91,
      "pc": [
        518
      ]
    },
    {
      "teal": 481,
      "source": 78,
      "pc": [
        519
      ]
    },
    {
      "teal": 486,
      "source": 94,
      "pc": [
        520,
        521,
        522
      ]
    },
    {
      "teal": 487,
      "source": 94,
      "pc": [
        523
      ]
    },
    {
      "teal": 490,
      "source": 94,
      "pc": [
        524,
        525
      ]
    },
    {
      "teal": 491,
      "source": 94,
      "pc": [
        526
      ]
    },
    {
      "teal": 492,
      "source": 94,
      "pc": [
        527
      ]
    },
    {
      "teal": 493,
      "source": 94,
      "pc": [
        528
      ]
    },
    {
      "teal": 494,
      "source": 94,
      "pc": [
        529,
        530
      ]
    },
    {
      "teal": 495,
      "source": 94,
      "pc": [
        531
      ]
    },
    {
      "teal": 496,
      "source": 94,
      "pc": [
        532
      ]
    },
    {
      "teal": 499,
      "source": 94,
      "errorMessage": "argument 1 (axferTxn) for receiveSwapAndSendOn must be a axfer transaction",
      "pc": [
        533
      ]
    },
    {
      "teal": 502,
      "source": 94,
      "pc": [
        534,
        535,
        536
      ]
    },
    {
      "teal": 503,
      "source": 94,
      "pc": [
        537
      ]
    },
    {
      "teal": 504,
      "source": 94,
      "pc": [
        538
      ]
    },
    {
      "teal": 508,
      "source": 94,
      "pc": [
        539,
        540,
        541
      ]
    },
    {
      "teal": 512,
      "source": 95,
      "pc": [
        542,
        543
      ]
    },
    {
      "teal": 513,
      "source": 95,
      "pc": [
        544,
        545
      ]
    },
    {
      "teal": 514,
      "source": 95,
      "pc": [
        546
      ]
    },
    {
      "teal": 515,
      "source": 95,
      "pc": [
        547
      ]
    },
    {
      "teal": 518,
      "source": 95,
      "errorMessage": "Only swap manager can send swap tokens",
      "pc": [
        548
      ]
    },
    {
      "teal": 529,
      "source": 97,
      "pc": [
        549,
        550
      ]
    },
    {
      "teal": 530,
      "source": 98,
      "pc": [
        551,
        552
      ]
    },
    {
      "teal": 531,
      "source": 98,
      "pc": [
        553,
        554
      ]
    },
    {
      "teal": 532,
      "source": 98,
      "pc": [
        555
      ]
    },
    {
      "teal": 533,
      "source": 98,
      "pc": [
        556
      ]
    },
    {
      "teal": 536,
      "source": 98,
      "errorMessage": "transaction verification failed: {\"txn\":\"axferTxn\",\"field\":\"sender\",\"expected\":\"this.swapManagerAccount.value\"}",
      "pc": [
        557
      ]
    },
    {
      "teal": 539,
      "source": 97,
      "pc": [
        558,
        559
      ]
    },
    {
      "teal": 540,
      "source": 99,
      "pc": [
        560,
        561
      ]
    },
    {
      "teal": 541,
      "source": 99,
      "pc": [
        562,
        563
      ]
    },
    {
      "teal": 542,
      "source": 99,
      "pc": [
        564
      ]
    },
    {
      "teal": 545,
      "source": 99,
      "errorMessage": "transaction verification failed: {\"txn\":\"axferTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}",
      "pc": [
        565
      ]
    },
    {
      "teal": 548,
      "source": 97,
      "pc": [
        566,
        567
      ]
    },
    {
      "teal": 549,
      "source": 100,
      "pc": [
        568,
        569
      ]
    },
    {
      "teal": 550,
      "source": 100,
      "pc": [
        570,
        571
      ]
    },
    {
      "teal": 551,
      "source": 100,
      "pc": [
        572
      ]
    },
    {
      "teal": 554,
      "source": 100,
      "errorMessage": "transaction verification failed: {\"txn\":\"axferTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}",
      "pc": [
        573
      ]
    },
    {
      "teal": 557,
      "source": 97,
      "pc": [
        574,
        575
      ]
    },
    {
      "teal": 558,
      "source": 101,
      "pc": [
        576,
        577
      ]
    },
    {
      "teal": 559,
      "source": 101,
      "pc": [
        578
      ]
    },
    {
      "teal": 560,
      "source": 101,
      "pc": [
        579
      ]
    },
    {
      "teal": 561,
      "source": 101,
      "pc": [
        580
      ]
    },
    {
      "teal": 564,
      "source": 101,
      "errorMessage": "transaction verification failed: {\"txn\":\"axferTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.SwapToTokenId.value)\"}",
      "pc": [
        581
      ]
    },
    {
      "teal": 567,
      "source": 97,
      "pc": [
        582,
        583
      ]
    },
    {
      "teal": 568,
      "source": 102,
      "pc": [
        584,
        585
      ]
    },
    {
      "teal": 569,
      "source": 102,
      "pc": [
        586,
        587
      ]
    },
    {
      "teal": 570,
      "source": 102,
      "pc": [
        588,
        589
      ]
    },
    {
      "teal": 571,
      "source": 102,
      "pc": [
        590,
        591,
        592
      ]
    },
    {
      "teal": 572,
      "source": 102,
      "pc": [
        593,
        594
      ]
    },
    {
      "teal": 573,
      "source": 102,
      "pc": [
        595
      ]
    },
    {
      "teal": 574,
      "source": 102,
      "pc": [
        596,
        597
      ]
    },
    {
      "teal": 575,
      "source": 102,
      "pc": [
        598,
        599
      ]
    },
    {
      "teal": 576,
      "source": 102,
      "pc": [
        600,
        601,
        602
      ]
    },
    {
      "teal": 577,
      "source": 102,
      "pc": [
        603
      ]
    },
    {
      "teal": 578,
      "source": 102,
      "pc": [
        604
      ]
    },
    {
      "teal": 581,
      "source": 102,
      "errorMessage": "transaction verification failed: {\"txn\":\"axferTxn\",\"field\":\"note\",\"expected\":\"axferTxn.xferAsset.id.toString() + \\\", \\\" + axferTxn.assetAmount.toString()\"}",
      "pc": [
        605
      ]
    },
    {
      "teal": 585,
      "source": 105,
      "pc": [
        606
      ]
    },
    {
      "teal": 586,
      "source": 105,
      "pc": [
        607
      ]
    },
    {
      "teal": 587,
      "source": 105,
      "pc": [
        608,
        609
      ]
    },
    {
      "teal": 588,
      "source": 105,
      "pc": [
        610,
        611
      ]
    },
    {
      "teal": 589,
      "source": 105,
      "pc": [
        612
      ]
    },
    {
      "teal": 590,
      "source": 105,
      "pc": [
        613
      ]
    },
    {
      "teal": 591,
      "source": 105,
      "pc": [
        614
      ]
    },
    {
      "teal": 592,
      "source": 105,
      "pc": [
        615
      ]
    },
    {
      "teal": 596,
      "source": 106,
      "pc": [
        616
      ]
    },
    {
      "teal": 597,
      "source": 106,
      "pc": [
        617,
        618
      ]
    },
    {
      "teal": 598,
      "source": 106,
      "pc": [
        619
      ]
    },
    {
      "teal": 599,
      "source": 94,
      "pc": [
        620
      ]
    },
    {
      "teal": 604,
      "source": 109,
      "pc": [
        621,
        622,
        623
      ]
    },
    {
      "teal": 605,
      "source": 109,
      "pc": [
        624
      ]
    },
    {
      "teal": 606,
      "source": 109,
      "pc": [
        625
      ]
    },
    {
      "teal": 607,
      "source": 109,
      "pc": [
        626
      ]
    },
    {
      "teal": 608,
      "source": 109,
      "pc": [
        627
      ]
    },
    {
      "teal": 611,
      "source": 109,
      "errorMessage": "argument 0 (sendToAddress) for sendSwappedTokens must be a address",
      "pc": [
        628
      ]
    },
    {
      "teal": 614,
      "source": 109,
      "pc": [
        629,
        630,
        631
      ]
    },
    {
      "teal": 615,
      "source": 109,
      "pc": [
        632
      ]
    },
    {
      "teal": 616,
      "source": 109,
      "pc": [
        633
      ]
    },
    {
      "teal": 620,
      "source": 109,
      "pc": [
        634,
        635,
        636
      ]
    },
    {
      "teal": 624,
      "source": 110,
      "pc": [
        637,
        638
      ]
    },
    {
      "teal": 625,
      "source": 110,
      "pc": [
        639,
        640
      ]
    },
    {
      "teal": 626,
      "source": 110,
      "pc": [
        641
      ]
    },
    {
      "teal": 627,
      "source": 110,
      "pc": [
        642
      ]
    },
    {
      "teal": 630,
      "source": 110,
      "errorMessage": "Only orchestrator can send swapped tokens to nominated accounts",
      "pc": [
        643
      ]
    },
    {
      "teal": 634,
      "source": 111,
      "pc": [
        644
      ]
    },
    {
      "teal": 635,
      "source": 111,
      "pc": [
        645
      ]
    },
    {
      "teal": 636,
      "source": 111,
      "pc": [
        646
      ]
    },
    {
      "teal": 637,
      "source": 111,
      "pc": [
        647
      ]
    },
    {
      "teal": 640,
      "source": 111,
      "errorMessage": "Insufficient swapped tokens",
      "pc": [
        648
      ]
    },
    {
      "teal": 650,
      "source": 113,
      "pc": [
        649
      ]
    },
    {
      "teal": 651,
      "source": 113,
      "pc": [
        650
      ]
    },
    {
      "teal": 652,
      "source": 113,
      "pc": [
        651,
        652
      ]
    },
    {
      "teal": 656,
      "source": 114,
      "pc": [
        653,
        654
      ]
    },
    {
      "teal": 657,
      "source": 114,
      "pc": [
        655,
        656
      ]
    },
    {
      "teal": 661,
      "source": 115,
      "pc": [
        657,
        658
      ]
    },
    {
      "teal": 662,
      "source": 115,
      "pc": [
        659,
        660
      ]
    },
    {
      "teal": 666,
      "source": 116,
      "pc": [
        661
      ]
    },
    {
      "teal": 667,
      "source": 116,
      "pc": [
        662
      ]
    },
    {
      "teal": 668,
      "source": 116,
      "pc": [
        663,
        664
      ]
    },
    {
      "teal": 672,
      "source": 117,
      "pc": [
        665
      ]
    },
    {
      "teal": 673,
      "source": 117,
      "pc": [
        666
      ]
    },
    {
      "teal": 674,
      "source": 117,
      "pc": [
        667,
        668
      ]
    },
    {
      "teal": 678,
      "source": 118,
      "pc": [
        669,
        670,
        671,
        672,
        673,
        674,
        675,
        676,
        677,
        678,
        679,
        680,
        681,
        682,
        683,
        684,
        685,
        686,
        687,
        688,
        689,
        690,
        691,
        692,
        693
      ]
    },
    {
      "teal": 679,
      "source": 118,
      "pc": [
        694,
        695
      ]
    },
    {
      "teal": 680,
      "source": 118,
      "pc": [
        696
      ]
    },
    {
      "teal": 681,
      "source": 118,
      "pc": [
        697,
        698
      ]
    },
    {
      "teal": 684,
      "source": 113,
      "pc": [
        699
      ]
    },
    {
      "teal": 685,
      "source": 113,
      "pc": [
        700,
        701
      ]
    },
    {
      "teal": 688,
      "source": 113,
      "pc": [
        702
      ]
    },
    {
      "teal": 692,
      "source": 121,
      "pc": [
        703
      ]
    },
    {
      "teal": 693,
      "source": 121,
      "pc": [
        704
      ]
    },
    {
      "teal": 694,
      "source": 121,
      "pc": [
        705
      ]
    },
    {
      "teal": 698,
      "source": 122,
      "pc": [
        706
      ]
    },
    {
      "teal": 699,
      "source": 122,
      "pc": [
        707,
        708
      ]
    },
    {
      "teal": 700,
      "source": 122,
      "pc": [
        709
      ]
    },
    {
      "teal": 701,
      "source": 109,
      "pc": [
        710
      ]
    },
    {
      "teal": 704,
      "source": 3,
      "pc": [
        711,
        712,
        713,
        714,
        715,
        716
      ]
    },
    {
      "teal": 705,
      "source": 3,
      "pc": [
        717,
        718,
        719
      ]
    },
    {
      "teal": 706,
      "source": 3,
      "pc": [
        720,
        721,
        722,
        723
      ]
    },
    {
      "teal": 709,
      "source": 3,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "pc": [
        724
      ]
    },
    {
      "teal": 712,
      "source": 3,
      "pc": [
        725,
        726,
        727,
        728,
        729,
        730
      ]
    },
    {
      "teal": 713,
      "source": 3,
      "pc": [
        731,
        732,
        733,
        734,
        735,
        736
      ]
    },
    {
      "teal": 714,
      "source": 3,
      "pc": [
        737,
        738,
        739,
        740,
        741,
        742
      ]
    },
    {
      "teal": 715,
      "source": 3,
      "pc": [
        743,
        744,
        745,
        746,
        747,
        748
      ]
    },
    {
      "teal": 716,
      "source": 3,
      "pc": [
        749,
        750,
        751,
        752,
        753,
        754
      ]
    },
    {
      "teal": 717,
      "source": 3,
      "pc": [
        755,
        756,
        757,
        758,
        759,
        760
      ]
    },
    {
      "teal": 718,
      "source": 3,
      "pc": [
        761,
        762,
        763,
        764,
        765,
        766
      ]
    },
    {
      "teal": 719,
      "source": 3,
      "pc": [
        767,
        768,
        769
      ]
    },
    {
      "teal": 720,
      "source": 3,
      "pc": [
        770,
        771,
        772,
        773,
        774,
        775,
        776,
        777,
        778,
        779,
        780,
        781,
        782,
        783,
        784,
        785
      ]
    },
    {
      "teal": 723,
      "source": 3,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "pc": [
        786
      ]
    },
    {
      "teal": 726,
      "source": 3,
      "pc": [
        787,
        788,
        789,
        790,
        791,
        792
      ]
    },
    {
      "teal": 727,
      "source": 3,
      "pc": [
        793,
        794,
        795
      ]
    },
    {
      "teal": 728,
      "source": 3,
      "pc": [
        796,
        797,
        798,
        799
      ]
    },
    {
      "teal": 731,
      "source": 3,
      "errorMessage": "this contract does not implement the given ABI method for call DeleteApplication",
      "pc": [
        800
      ]
    },
    {
      "teal": 734,
      "source": 3,
      "pc": [
        801,
        802,
        803
      ]
    },
    {
      "teal": 735,
      "source": 3,
      "pc": [
        804,
        805,
        806,
        807,
        808,
        809,
        810,
        811,
        812,
        813,
        814,
        815
      ]
    },
    {
      "teal": 736,
      "source": 3,
      "pc": [
        816,
        817
      ]
    },
    {
      "teal": 737,
      "source": 3,
      "pc": [
        818
      ]
    },
    {
      "teal": 738,
      "source": 3,
      "pc": [
        819
      ]
    },
    {
      "teal": 739,
      "source": 3,
      "pc": [
        820
      ]
    },
    {
      "teal": 740,
      "source": 3
    },
    {
      "teal": 743,
      "source": 3,
      "pc": [
        821,
        822,
        823
      ]
    },
    {
      "teal": 744,
      "source": 3,
      "pc": [
        824,
        825
      ]
    },
    {
      "teal": 745,
      "source": 3,
      "pc": [
        826
      ]
    },
    {
      "teal": 746,
      "source": 3,
      "pc": [
        827
      ]
    },
    {
      "teal": 747,
      "source": 3,
      "pc": [
        828,
        829,
        830
      ]
    },
    {
      "teal": 748,
      "source": 3,
      "pc": [
        831,
        832,
        833
      ]
    },
    {
      "teal": 749,
      "source": 3,
      "pc": [
        834
      ]
    },
    {
      "teal": 752,
      "source": 3,
      "pc": [
        835,
        836
      ]
    },
    {
      "teal": 753,
      "source": 3,
      "pc": [
        837,
        838
      ]
    },
    {
      "teal": 754,
      "source": 3,
      "pc": [
        839
      ]
    },
    {
      "teal": 755,
      "source": 3,
      "pc": [
        840
      ]
    },
    {
      "teal": 756,
      "source": 3,
      "pc": [
        841
      ]
    },
    {
      "teal": 757,
      "source": 3,
      "pc": [
        842,
        843,
        844
      ]
    },
    {
      "teal": 758,
      "source": 3,
      "pc": [
        845,
        846
      ]
    },
    {
      "teal": 759,
      "source": 3,
      "pc": [
        847,
        848
      ]
    },
    {
      "teal": 760,
      "source": 3,
      "pc": [
        849
      ]
    },
    {
      "teal": 761,
      "source": 3,
      "pc": [
        850,
        851,
        852
      ]
    },
    {
      "teal": 762,
      "source": 3,
      "pc": [
        853,
        854,
        855
      ]
    },
    {
      "teal": 765,
      "source": 3,
      "pc": [
        856,
        857
      ]
    },
    {
      "teal": 768,
      "source": 3,
      "pc": [
        858,
        859
      ]
    },
    {
      "teal": 769,
      "source": 3,
      "pc": [
        860,
        861
      ]
    },
    {
      "teal": 770,
      "source": 3,
      "pc": [
        862
      ]
    },
    {
      "teal": 771,
      "source": 3,
      "pc": [
        863,
        864,
        865
      ]
    },
    {
      "teal": 772,
      "source": 3,
      "pc": [
        866
      ]
    },
    {
      "teal": 773,
      "source": 3,
      "pc": [
        867
      ]
    }
  ],
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "byteCode": {
    "approval": "CSAFAQAgBAomCQtsYXN0VXBkYXRlZAt1c2VyQWRkcmVzcxNzd2FwcGVkVG9rZW5CYWxhbmNlDVN3YXBUb1Rva2VuSWQKc3dhcEFtb3VudBJzd2FwTWFuYWdlckFjY291bnQDbWJyE29yY2hlc3RyYXRvckFkZHJlc3MCLCAxGBSBBgsxGQiNDAI1AAAAAAAAAAACcwInAAAAAAAAAAAAAAA2GgNJFSQSRDYaAhc2GgFJFSQSRIgAAiJDigMAKiNnJwYjZygyB2cnB4v/ZykxAGcri/5nJwQjZycFi/1niYgAAiJDigAAMQApZBJEiTYaAReIAAIiQ4oBADEAKWQSRLElshCL/7IRI7ISMgqyFDIKsgAjsgGziTYaARcxFiIJSTgQIhJEiAACIkOKAgAxAClkEkSL/zgAKWQSRIv/OAcyChJEi/84CIv+EkQnBmSL/zgICCcGTGcoMgdniTYaAhc2GgEXiAACIkOKAgAxAClkEkQnBIv/ZyuL/mcoMgdniTYaAUkVJBJEiAACIkOKAQAxACcHZBJEJwWL/2coMgdniYgAAiJDigAAMQApZBJEMgpzAEgjDUQnBGQjDUQrZCMNRLEishAnBGSyCDIKsgAnBWSyB4AcU3dhcCByZXF1ZXN0ZWQ6IHRvLCBhbW91bnQ6ICtkUCcIUCcEZFCyBSOyAbMoMgdniTYaARcxFiIJSTgQJRJEiAACIkOKAgAxACcFZBJEi/84ACcFZBJEi/84FDIKEkSL/zgSi/4SRIv/OBErZBJEi/84BYv/OBGIAOQnCFCL/zgSiADaUBJEKmSL/zgSCCpMZygyB2eJNhoBSRUkEkSIAAIiQ4oBADEAJwdkEkQqZCMNRLElshAyCrIAi/+yFCpkshIrZLIRgBdTd2FwcGVkIHRva2VucyBzZW50IHRvIIv/ULIFI7IBsyojZygyB2eJgAT5EuvRNhoAjgH9zQCABG/pr4WABBxw/p2ABKwkY4mABF2wTvCABNogjMWABLY9EiKABFkO49Y2GgCOB/3c/gb+S/5v/pD+9v9bAIAEJIfDLDYaAI4B/b8AigEBgAowMTIzNDU2Nzg5i/8iWImKAQGL/yMSQQAEgAEwiYv/IQQKIw1BAAuL/yEECoj/4EIAAoAAi/8hBBiI/79QiQ==",
    "clear": "CQ=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 25,
      "patch": 0,
      "commitHash": "9855f57c"
    }
  }
}